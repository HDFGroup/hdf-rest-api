###################
FAQ
###################


What datatypes are supported?
-----------------------------

=========================           ============================================    
Type                                Precisions                                       
=========================           ============================================    
Integer                             1, 2, 4 or 8 byte, BE/LE, signed/unsigned
Float                               4, 8  byte, BE/LE
Compound                            Arbitrary names and offsets
Strings (fixed-length)              Any length
Strings (variable-length)           Any length, ASCII 
Opaque                              Any length
Array                               Any supported type
Enumeration                         Any integer type                           
References                          Region and object
=========================           ============================================     

Unsupported types:

=========================           ============================================
Type                                Status                                 
=========================           ============================================
HDF5 VLEN (non-string)              Coming soon!
HDF5 "time" type
Opaque                              
Bitfields                            
=========================           ============================================


Why does HDF Kita use those long ids?
-------------------------------------

HDF Kita uses the UUID standard (http://en.wikipedia.org/wiki/Universally_unique_identifier)
to identify objects (datasets, groups, and committed datatypes) uniquely.  The benefit of
using UUIDs is that objects can be uniquely identified without requiring any central 
coordination.

How can I get a dataset (or group) via a pathname?
--------------------------------------------------

TODO: Update with h5path semantics
You will need to iterate through the path to get the UUID of each subgroup.
E.g. suppose the path of interest is "/g1/g1.1" in the domain: "tall.data.hdfgroup.org".
Perform these actions to get the UUID of the group at /g1/g1.1.

#. ``GET /``  // returns the UUID of the root group
#. ``GET /groups/<root_uuid>/links/g1``  // returns the UUID of the group at "/g1"
#. ``GET /groups/<g1_uuid>/links/g1.1``  // returns the UUID of the group at "/g1/g1.1'

How do I guard against an attribute (of a dataset/group/file) being deleted by a request?
-----------------------------------------------------------------------------------------
TODO: Probably already implemented with ACLs
Future releases of HDF Kita will support authorization and permissions to protect content
that shouldn't be altered.

For now the choices are:

#. Don't expose the HDF Kita endpoint on a non-trusted network
#. Make the files readonly
#. Make periodic backups of all data files
#. Don't share the domain name with non-trusted sources.  Since HDF Kita doesn't provide an operation to list all domains on the server, creating a non-trivial domain name (e.g. "mydata_18494") will be relatively secure.

How can I display my data in a nice Web UI?
-------------------------------------------
There are many Javascript libraries (e.g. http://d3js.org) that can take the data 
returned by HDF Kita to create compelling graphics.  

I have a C or Fortran application that uses HDF5, how can I take advantage of HDF Kita?
---------------------------------------------------------------------------------------
We currently have an experimental HDF5 library plugin that will transparently invoke the
REST API. It can be obtained from https://bitbucket.hdfgroup.org/users/jhenderson/repos/rest-vol/browse.
Note that the plugin depends on libcurl (https://curl.haxx.se/) and libyajl being installed
on the system (http://lloyd.github.io/yajl/). The plugin builds and uses a specialized
distribution of HDF5 that is included alongside the source code. Windows and OS X have not
been extensively tested with the plugin and should currently be considered unsupported platforms.

Beyond this, you can also use C libraries such as libcurl to directly invoke HDF Kita requests.

Is there documentation on the JSON format generated by h5tojson.py:
-------------------------------------------------------------------
Yes.  There is a grammar published here: http://hdf5-json.readthedocs.org/en/latest/index.html. 

How do I submit a bug report?
------------------------------
TODO: inaccessible repo for HSDS
If you have a Github account, create an issue here: 
https://github.com/HDFGroup/hsds/issues.

Alternatively, you can send an email to the HDF Group help desk: help@hdfgroup.org.
